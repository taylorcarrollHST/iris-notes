{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taylor.carroll\\\\workspace\\\\clariti\\\\priceTransparency\\\\clariti-ui\\\\src\\\\components\\\\quotes\\\\QuoteLibrary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const QuoteLibrary = () => {\n  _s();\n\n  const [quotes, setQuotes] = useState( //placeholder state until we get a working fetch going\n  [{\n    id: 1,\n    quoteDate: \"mm/dd/yyy\",\n    case: \"After cataract laser...\",\n    patient: \"Finelli, Michael\",\n    dob: \"mm/dd/yyyy\",\n    primaryPayer: \"\",\n    surgicalCPT: \"\",\n    anesthesiaCPT: \"\",\n    group: \"000000\",\n    amtDue: \"1000\",\n    provider: \"\",\n    creator: \"Finelli\"\n  }, {\n    id: 2,\n    quoteDate: \"mm/dd/yyy\",\n    case: \"After cataract laser...\",\n    patient: \"Finelli, Michael\",\n    dob: \"mm/dd/yyyy\",\n    primaryPayer: \"\",\n    surgicalCPT: \"\",\n    anesthesiaCPT: \"\",\n    group: \"000000\",\n    amtDue: \"1000\",\n    provider: \"\",\n    creator: \"Finelli\"\n  }, {\n    id: 3,\n    quoteDate: \"mm/dd/yyy\",\n    case: \"After cataract laser...\",\n    patient: \"Finelli, Michael\",\n    dob: \"mm/dd/yyyy\",\n    primaryPayer: \"\",\n    surgicalCPT: \"\",\n    anesthesiaCPT: \"\",\n    group: \"000000\",\n    amtDue: \"1000\",\n    provider: \"\",\n    creator: \"Finelli\"\n  }, {\n    id: 4,\n    quoteDate: \"mm/dd/yyy\",\n    case: \"After cataract laser...\",\n    patient: \"Finelli, Michael\",\n    dob: \"mm/dd/yyyy\",\n    primaryPayer: \"\",\n    surgicalCPT: \"\",\n    anesthesiaCPT: \"\",\n    group: \"000000\",\n    amtDue: \"1000\",\n    provider: \"\",\n    creator: \"Finelli\"\n  }]);\n\n  async function getQuotes() {\n    let url = 'http://whatever/';\n    let config = {};\n    const response = await fetchQuotes();\n    console.log(response);\n  }\n\n  const fetchQuotes = () => {\n    return fetch(\"http://localhost:1234/quotes\").then(res => res.json());\n  }; // useEffect(() => {\n  //     //add fetch here\n  //     getQuotes(), [quotes]\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Quotes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      className: \"Quotes_table\",\n      children: quotes.map(quote => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is the table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: quote.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: quote.quoteDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: quote.case\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: quote.patient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuoteLibrary, \"u7AYgsCjul8bOoMFX/ERkFa74YA=\");\n\n_c = QuoteLibrary;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteLibrary\");","map":{"version":3,"names":["React","useEffect","useState","QuoteLibrary","quotes","setQuotes","id","quoteDate","case","patient","dob","primaryPayer","surgicalCPT","anesthesiaCPT","group","amtDue","provider","creator","getQuotes","url","config","response","fetchQuotes","console","log","fetch","then","res","json","map","quote"],"sources":["C:/Users/taylor.carroll/workspace/clariti/priceTransparency/clariti-ui/src/components/quotes/QuoteLibrary.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nexport const QuoteLibrary = () => {\r\n    const [quotes, setQuotes] = useState(\r\n        //placeholder state until we get a working fetch going\r\n        [\r\n            { id: 1, quoteDate: \"mm/dd/yyy\", case: \"After cataract laser...\", patient: \"Finelli, Michael\", dob: \"mm/dd/yyyy\", primaryPayer: \"\", surgicalCPT: \"\", anesthesiaCPT: \"\", group: \"000000\", amtDue: \"1000\", provider: \"\", creator: \"Finelli\" },\r\n            { id: 2, quoteDate: \"mm/dd/yyy\", case: \"After cataract laser...\", patient: \"Finelli, Michael\", dob: \"mm/dd/yyyy\", primaryPayer: \"\", surgicalCPT: \"\", anesthesiaCPT: \"\", group: \"000000\", amtDue: \"1000\", provider: \"\", creator: \"Finelli\" },\r\n            { id: 3, quoteDate: \"mm/dd/yyy\", case: \"After cataract laser...\", patient: \"Finelli, Michael\", dob: \"mm/dd/yyyy\", primaryPayer: \"\", surgicalCPT: \"\", anesthesiaCPT: \"\", group: \"000000\", amtDue: \"1000\", provider: \"\", creator: \"Finelli\" },\r\n            { id: 4, quoteDate: \"mm/dd/yyy\", case: \"After cataract laser...\", patient: \"Finelli, Michael\", dob: \"mm/dd/yyyy\", primaryPayer: \"\", surgicalCPT: \"\", anesthesiaCPT: \"\", group: \"000000\", amtDue: \"1000\", provider: \"\", creator: \"Finelli\" }\r\n        ]\r\n        )\r\n\r\n    async function getQuotes() {\r\n        let url = 'http://whatever/'\r\n        let config = {}\r\n        const response = await fetchQuotes();\r\n        console.log(response)\r\n    }\r\n\r\n    const fetchQuotes = () => {\r\n        return fetch(\"http://localhost:1234/quotes\")\r\n          .then(res => res.json())\r\n      };\r\n\r\n    // useEffect(() => {\r\n    //     //add fetch here\r\n    //     getQuotes(), [quotes]\r\n    // })\r\n\r\n    return (\r\n        <>\r\n        <h1> Quotes</h1>\r\n        <th className=\"Quotes_table\">\r\n            {\r\n                quotes.map(quote => {\r\n                    return <>\r\n                    <p>This is the table</p>\r\n                        <div>{quote.id}</div>\r\n                        <div>{quote.quoteDate}</div>\r\n                        <div>{quote.case}</div>\r\n                        <div>{quote.patient}</div>\r\n                    </>\r\n                    \r\n                })\r\n            }\r\n        </th>\r\n        </>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAC9B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,EAChC;EACA,CACI;IAAEI,EAAE,EAAE,CAAN;IAASC,SAAS,EAAE,WAApB;IAAiCC,IAAI,EAAE,yBAAvC;IAAkEC,OAAO,EAAE,kBAA3E;IAA+FC,GAAG,EAAE,YAApG;IAAkHC,YAAY,EAAE,EAAhI;IAAoIC,WAAW,EAAE,EAAjJ;IAAqJC,aAAa,EAAE,EAApK;IAAwKC,KAAK,EAAE,QAA/K;IAAyLC,MAAM,EAAE,MAAjM;IAAyMC,QAAQ,EAAE,EAAnN;IAAuNC,OAAO,EAAE;EAAhO,CADJ,EAEI;IAAEX,EAAE,EAAE,CAAN;IAASC,SAAS,EAAE,WAApB;IAAiCC,IAAI,EAAE,yBAAvC;IAAkEC,OAAO,EAAE,kBAA3E;IAA+FC,GAAG,EAAE,YAApG;IAAkHC,YAAY,EAAE,EAAhI;IAAoIC,WAAW,EAAE,EAAjJ;IAAqJC,aAAa,EAAE,EAApK;IAAwKC,KAAK,EAAE,QAA/K;IAAyLC,MAAM,EAAE,MAAjM;IAAyMC,QAAQ,EAAE,EAAnN;IAAuNC,OAAO,EAAE;EAAhO,CAFJ,EAGI;IAAEX,EAAE,EAAE,CAAN;IAASC,SAAS,EAAE,WAApB;IAAiCC,IAAI,EAAE,yBAAvC;IAAkEC,OAAO,EAAE,kBAA3E;IAA+FC,GAAG,EAAE,YAApG;IAAkHC,YAAY,EAAE,EAAhI;IAAoIC,WAAW,EAAE,EAAjJ;IAAqJC,aAAa,EAAE,EAApK;IAAwKC,KAAK,EAAE,QAA/K;IAAyLC,MAAM,EAAE,MAAjM;IAAyMC,QAAQ,EAAE,EAAnN;IAAuNC,OAAO,EAAE;EAAhO,CAHJ,EAII;IAAEX,EAAE,EAAE,CAAN;IAASC,SAAS,EAAE,WAApB;IAAiCC,IAAI,EAAE,yBAAvC;IAAkEC,OAAO,EAAE,kBAA3E;IAA+FC,GAAG,EAAE,YAApG;IAAkHC,YAAY,EAAE,EAAhI;IAAoIC,WAAW,EAAE,EAAjJ;IAAqJC,aAAa,EAAE,EAApK;IAAwKC,KAAK,EAAE,QAA/K;IAAyLC,MAAM,EAAE,MAAjM;IAAyMC,QAAQ,EAAE,EAAnN;IAAuNC,OAAO,EAAE;EAAhO,CAJJ,CAFgC,CAApC;;EAUA,eAAeC,SAAf,GAA2B;IACvB,IAAIC,GAAG,GAAG,kBAAV;IACA,IAAIC,MAAM,GAAG,EAAb;IACA,MAAMC,QAAQ,GAAG,MAAMC,WAAW,EAAlC;IACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;EACH;;EAED,MAAMC,WAAW,GAAG,MAAM;IACtB,OAAOG,KAAK,CAAC,8BAAD,CAAL,CACJC,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,CAAP;EAED,CAHH,CAlB8B,CAuB9B;EACA;EACA;EACA;;;EAEA,oBACI;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAI,SAAS,EAAC,cAAd;MAAA,UAEQxB,MAAM,CAACyB,GAAP,CAAWC,KAAK,IAAI;QAChB,oBAAO;UAAA,wBACP;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADO,eAEH;YAAA,UAAMA,KAAK,CAACxB;UAAZ;YAAA;YAAA;YAAA;UAAA,QAFG,eAGH;YAAA,UAAMwB,KAAK,CAACvB;UAAZ;YAAA;YAAA;YAAA;UAAA,QAHG,eAIH;YAAA,UAAMuB,KAAK,CAACtB;UAAZ;YAAA;YAAA;YAAA;UAAA,QAJG,eAKH;YAAA,UAAMsB,KAAK,CAACrB;UAAZ;YAAA;YAAA;YAAA;UAAA,QALG;QAAA,gBAAP;MAQH,CATD;IAFR;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA,gBADJ;AAmBH,CA/CM;;GAAMN,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}