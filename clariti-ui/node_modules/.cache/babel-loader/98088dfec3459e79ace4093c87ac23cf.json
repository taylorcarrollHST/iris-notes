{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taylor.carroll\\\\workspace\\\\clariti\\\\priceTransparency\\\\clariti-ui\\\\src\\\\components\\\\quotes\\\\QuoteLibrary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport searchIcon from \"../../resources/images/search-icon.svg\";\nimport controlsIcon from \"../../resources/images/controls-icon.svg\";\nimport exportIcon from \"../../resources/images/export-icon.svg\";\nimport filterIcon from \"../../resources/images/filter-icon.svg\";\nimport jsonMock from \"../../resources/jsonMock/quoteMock.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const QuoteLibrary = () => {\n  _s();\n\n  const [quotes, setQuotes] = useState( //placeholder state until we get a working fetch going\n  [// { id: 2, quoteDate: \"mm/dd/yyy\", case: \"After cataract laser...\", patient: \"Finelli, Michael\", dob: \"mm/dd/yyyy\", primaryPayer: \"\", surgicalCPT: \"\", anesthesiaCPT: \"\", group: \"000000\", amtDue: \"1000\", provider: \"\", creator: \"Finelli\" },\n    // { id: 3, quoteDate: \"mm/dd/yyy\", case: \"After cataract laser...\", patient: \"Finelli, Michael\", dob: \"mm/dd/yyyy\", primaryPayer: \"\", surgicalCPT: \"\", anesthesiaCPT: \"\", group: \"000000\", amtDue: \"1000\", provider: \"\", creator: \"Finelli\" },\n    // { id: 4, quoteDate: \"mm/dd/yyy\", case: \"After cataract laser...\", patient: \"Finelli, Michael\", dob: \"mm/dd/yyyy\", primaryPayer: \"\", surgicalCPT: \"\", anesthesiaCPT: \"\", group: \"000000\", amtDue: \"1000\", provider: \"\", creator: \"Finelli\" }\n  ]);\n\n  function getQuotes() {\n    //let url = '\"http://localhost:1234/quotes\"'\n    let url = '../../resources/jsonMock/quoteMock.json'; //let config = {}\n\n    fetchQuotes(url).then(quotes => {\n      quotes;\n    });\n    console.log(quotes);\n  }\n\n  const fetchQuotes = async url => {\n    // return fetch(`${url}/quotes`)\n    //    .then(res => res.json())\n    const response = await fetch(`${url}/quotes`);\n    const quotes = await response.json();\n    return quotes;\n  };\n\n  useEffect(() => {\n    getQuotes();\n  }, [quotes]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-title\",\n        children: \"Quotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-header-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: filterIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-search\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: searchIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Search Placeholder Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-header-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: controlsIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: exportIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"table-new-btn\",\n              children: \"Co-Provider Quote +\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"quotes-table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setQuotes(),\n      children: \"Get Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuoteLibrary, \"3gK2OeV01hDSAT/hLJ1gP40y01U=\");\n\n_c = QuoteLibrary;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteLibrary\");","map":{"version":3,"names":["React","useEffect","useState","searchIcon","controlsIcon","exportIcon","filterIcon","jsonMock","QuoteLibrary","quotes","setQuotes","getQuotes","url","fetchQuotes","then","console","log","response","fetch","json"],"sources":["C:/Users/taylor.carroll/workspace/clariti/priceTransparency/clariti-ui/src/components/quotes/QuoteLibrary.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport searchIcon from \"../../resources/images/search-icon.svg\"\r\nimport controlsIcon from \"../../resources/images/controls-icon.svg\"\r\nimport exportIcon from \"../../resources/images/export-icon.svg\"\r\nimport filterIcon from \"../../resources/images/filter-icon.svg\"\r\nimport jsonMock from \"../../resources/jsonMock/quoteMock.json\"\r\n\r\n\r\nexport const QuoteLibrary = () => {\r\n    const [quotes, setQuotes] = useState(\r\n        //placeholder state until we get a working fetch going\r\n        [\r\n            // { id: 2, quoteDate: \"mm/dd/yyy\", case: \"After cataract laser...\", patient: \"Finelli, Michael\", dob: \"mm/dd/yyyy\", primaryPayer: \"\", surgicalCPT: \"\", anesthesiaCPT: \"\", group: \"000000\", amtDue: \"1000\", provider: \"\", creator: \"Finelli\" },\r\n            // { id: 3, quoteDate: \"mm/dd/yyy\", case: \"After cataract laser...\", patient: \"Finelli, Michael\", dob: \"mm/dd/yyyy\", primaryPayer: \"\", surgicalCPT: \"\", anesthesiaCPT: \"\", group: \"000000\", amtDue: \"1000\", provider: \"\", creator: \"Finelli\" },\r\n            // { id: 4, quoteDate: \"mm/dd/yyy\", case: \"After cataract laser...\", patient: \"Finelli, Michael\", dob: \"mm/dd/yyyy\", primaryPayer: \"\", surgicalCPT: \"\", anesthesiaCPT: \"\", group: \"000000\", amtDue: \"1000\", provider: \"\", creator: \"Finelli\" }\r\n                \r\n        ]\r\n        )\r\n\r\n    function getQuotes() {\r\n        //let url = '\"http://localhost:1234/quotes\"'\r\n        let url = '../../resources/jsonMock/quoteMock.json'\r\n        //let config = {}\r\n        fetchQuotes(url).then(quotes => {\r\n            quotes\r\n        });\r\n        \r\n        console.log(quotes)\r\n    }\r\n\r\n    const fetchQuotes = async (url) => {\r\n        // return fetch(`${url}/quotes`)\r\n        //    .then(res => res.json())\r\n        const response = await fetch(`${url}/quotes`)\r\n        const quotes = await response.json()\r\n        return quotes\r\n      };\r\n\r\n    useEffect(() => {\r\n        getQuotes()\r\n    }, [quotes])\r\n\r\n    return (\r\n        <>\r\n        <div className=\"table-container\">\r\n                <div className=\"table-title\">Quotes</div>\r\n                <div className=\"table-body\">\r\n                    <div className=\"table-header\">\r\n                        <div className=\"table-header-left\">\r\n                            <img src={filterIcon}/>\r\n                            <div className=\"table-search\">\r\n                                <img src={searchIcon}/>\r\n                                <input placeholder=\"Search Placeholder Text\"></input>\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"table-header-right\">\r\n                                <img src={controlsIcon}/>\r\n                                <img src={exportIcon}/>\r\n                                <button className=\"table-new-btn\">Co-Provider Quote +</button>\r\n                            </div>\r\n                    </div>\r\n                   \r\n                    <th className=\"quotes-table\">\r\n                        {/* {\r\n                            quotes.map(quote => {\r\n                                return <>\r\n                                    <div>Quote</div>\r\n                                    <div>{quote.id}</div>\r\n                                    <div>{quote.quoteDate}</div>\r\n                                    <div>{quote.case}</div>\r\n                                    <div>{quote.patient}</div>\r\n                                </>\r\n                                \r\n                            })\r\n                        } */}\r\n                        {/* {\r\n                            Object.keys(quotes.object).map((key, i) => {\r\n                                <>\r\n                                <div>{key}</div>\r\n                                <div>{quotes.object[key]}</div>\r\n                                </>\r\n                            })\r\n                        } */}\r\n                    </th>\r\n                </div>\r\n            </div>\r\n            <button onClick={() => setQuotes()}>Get Quote</button>\r\n        </>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,QAAP,MAAqB,yCAArB;;;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAC9B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,EAChC;EACA,CACI;IACA;IACA;EAHJ,CAFgC,CAApC;;EAUA,SAASS,SAAT,GAAqB;IACjB;IACA,IAAIC,GAAG,GAAG,yCAAV,CAFiB,CAGjB;;IACAC,WAAW,CAACD,GAAD,CAAX,CAAiBE,IAAjB,CAAsBL,MAAM,IAAI;MAC5BA,MAAM;IACT,CAFD;IAIAM,OAAO,CAACC,GAAR,CAAYP,MAAZ;EACH;;EAED,MAAMI,WAAW,GAAG,MAAOD,GAAP,IAAe;IAC/B;IACA;IACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,GAAI,SAAR,CAA5B;IACA,MAAMH,MAAM,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAArB;IACA,OAAOV,MAAP;EACD,CANH;;EAQAR,SAAS,CAAC,MAAM;IACZU,SAAS;EACZ,CAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;EAIA,oBACI;IAAA,wBACA;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACQ;QAAK,SAAS,EAAC,aAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADR,eAEQ;QAAK,SAAS,EAAC,YAAf;QAAA,wBACI;UAAK,SAAS,EAAC,cAAf;UAAA,wBACI;YAAK,SAAS,EAAC,mBAAf;YAAA,wBACI;cAAK,GAAG,EAAEH;YAAV;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAK,SAAS,EAAC,cAAf;cAAA,wBACI;gBAAK,GAAG,EAAEH;cAAV;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAO,WAAW,EAAC;cAAnB;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAQQ;YAAK,SAAS,EAAC,oBAAf;YAAA,wBACI;cAAK,GAAG,EAAEC;YAAV;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAK,GAAG,EAAEC;YAAV;cAAA;cAAA;cAAA;YAAA,QAFJ,eAGI;cAAQ,SAAS,EAAC,eAAlB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAHJ;UAAA;YAAA;YAAA;YAAA;UAAA,QARR;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAgBI;UAAI,SAAS,EAAC;QAAd;UAAA;UAAA;UAAA;QAAA,QAhBJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFR;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eA2CI;MAAQ,OAAO,EAAE,MAAMK,SAAS,EAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA3CJ;EAAA,gBADJ;AA+CH,CAjFM;;GAAMF,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}